* {
  font-family: "Roboto", sans-serif;
  font-size: 18px;
  line-height: 30px;
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:root {
  --inputBlue: rgb(26, 115, 232);
  --red: rgb(255, 0, 0);
  --green: rgb(0, 128, 0);
  --buttonHover: rgb(0 0 0 / 5%);
  --buttonPress: rgb(0 0 0 / 10%);
}

::-webkit-scrollbar {
  width: 5px;
}
::-webkit-scrollbar-track {
  background: #f1f1f1;
}
::-webkit-scrollbar-thumb {
  background: #888;
}
::-webkit-scrollbar-thumb:hover {
  background: #555;
}

body {
  overflow-y: scroll;
}

ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

a {
  text-decoration: none;
  color: black;
  width: fit-content;
  display: contents;
}
.app {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
  box-shadow: 0 5px 4px -4px rgb(0 0 0 / 37%);
}

.headerItem {
  width: fit-content;
  text-align: center;
  font-weight: 300;
  margin: 0;
  padding: 10px;
  &:hover {
    background-color: var(--buttonHover);
    transition: all 0.5s;
  }
  &:active {
    background-color: var(--buttonPress);
    transition: none;
  }
}

.aboutArea {
  padding: 10px;
}

.title {
  text-decoration: underline;
  font-size: 36px;
  padding: 20px;
  text-align: right;
}

.aboutBox {
  padding: 5px;
  box-shadow: 0 3px 4px -4px rgb(0 0 0 / 37%);
}

.aboutTitle {
  text-decoration: underline;
  border-radius: 10px;
  padding: 5px;
  &:hover {
    background-color: var(--buttonHover);
    transition: all 0.5s;
  }
  &:active {
    background-color: var(--buttonPress);
    transition: none;
  }
}

.aboutContent {
  transition: all 500ms;
  &-enter,
  &-exit-active {
    transform: translateY(-100%);
  }
  &-enter-active {
    transform: translateY(0);
  }
}

.visibleLink {
  text-decoration: dotted;
  color: blue;
}

.ScanArea {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  width: clamp(320px, 85%, 1280px);
  outline: none;
  margin: 20px 0;
  border-radius: 8px;
  box-shadow: 0 1px 4px 0 rgb(0 0 0 / 37%);
}

.optionsBox {
  border-bottom: 1px black solid;
  padding: 0 10px;
}

.optionButton {
  width: fit-content;
  padding: 5px 10px;
  margin: 0 10px;
  font-weight: bold;
  text-transform: uppercase;
  color: rgb(0 0 0 / 40%);
  background: white;
  border: none;
  border-bottom: solid white 2px;
  &:hover {
    background-color: var(--buttonHover);
  }
  &:active {
    background-color: var(--buttonPress);
  }
  &:disabled {
    background: white;
    color: var(--buttonPress);
  }
}

.selectedMeter {
  color: rgb(26, 115, 232);
  border-bottom: solid rgb(26, 115, 232) 2px;
  transition: color ease 1s, border-bottom ease 1s;
}

.IOArea {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  padding: 10px 20px;
}

.outputArea,
.inputArea {
  resize: none;
  width: 50%;
  border: none;
  &:focus {
    outline: none;
  }
}

.scanSelection {
  display: flex;
  justify-content: space-between;
  transition: all 500ms;
  &.Input {
    &:hover {
      color: var(--inputBlue);
    }
  }
  &.Quantities {
    &:hover {
      color: var(--red);
    }
  }
  &.Full.Scan {
    &:hover {
      color: var(--green);
    }
  }
}

.lineList {
  border-radius: 5px;
  box-shadow: 0 1px 4px 0 rgb(0 0 0 / 37%);
  background-color: white;
  &-enter {
    transform: translateY(-100%);
  }
  &-enter-active {
    transform: translateY(0);
    transition: all 0.5s;
  }
  &-exit-active {
    transform: translateY(-100%);
    transition: all 0.5s;
  }
}

.lineBounder {
  border-radius: 5px;
  transition: height 0.5s;
  &-enter-active {
    overflow: hidden;
    box-shadow: 0 1px 4px 0 rgb(0 0 0 / 37%);
  }
  &-enter-done {
    overflow: visible;
  }
  &-exit-active {
    overflow: hidden;
    box-shadow: 0 1px 4px 0 rgb(0 0 0 / 37%);
  }
}

.aboutBounder {
  transition: height 0.5s;
  overflow: hidden;
}

.outputText {
  margin: 0 5px;
}

.tooltip {
  //this is naughty....
  position: relative;
  width: 30px;
  height: 30px;
  &::before {
    //controll how/where the tooltip renders
    --scale: 0;
    color: black;
    position: absolute;
    top: -0.25rem;
    left: 50%;
    transform: translateX(-50%) translateY(-100%) scale(var(--scale));
    transition: 100ms transform;

    //controll what the tooltip looks like
    background-color: rgb(255 255 255);
    box-shadow: 0 1px 1px 0 rgb(0 0 0 / 50%);
    width: 200px;
    padding: 2px;
    border-radius: 5px;
    line-height: 20px;
    content: attr(tooltip);
  }

  &:hover::before {
    z-index: 100;
    --scale: 1;
  }
}

.icon {
  --size: 30px;
  height: var(--size);
  width: var(--size);
  transform: scale(75%);
  &.warning {
    color: var(--red);
  }
}
